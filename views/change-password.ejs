<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Reset Your Password</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            background-color: #f8f9fa; /* Light grey background */
        }
        .form-container {
            background-color: #fff;
            padding: 2rem;
            border-radius: 0.5rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1);
            width: 100%;
            max-width: 450px; /* Max width for the form container */
        }
    </style>
</head>
<body>

    <div class="form-container">
        <h2 class="text-center mb-4">Set New Password</h2>
        <p class="text-center text-muted mb-4">
            Please enter your new password below.
        </p>

        <% if (typeof errorMessage !== 'undefined' && errorMessage) { %>
            <div class="alert alert-danger" role="alert" id="errorMessage">
                <%= errorMessage %>
            </div>
        <% } %>

        <% if (typeof message !== 'undefined' && message) { %>
            <div class="alert alert-success" role="alert" id="successMessage">
                <%= message %>
            </div>
        <% } %>

        <form id="resetPasswordForm" action="/auth/forgot-password/<%= token %>" method="POST">
            <div class="mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" required minlength="8">
                <div class="form-text">Password must be at least 8 characters long.</div>
            </div>
            <div class="mb-3">
                <label for="confirmPassword" class="form-label">Confirm New Password</label>
                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required minlength="8">
            </div>
            <button type="submit" class="btn btn-primary w-100">Reset Password</button>
        </form>

        <div class="text-center mt-3 d-none" id="loginLinkContainer">
             <a href="/auth/login">Proceed to Login</a>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const resetPasswordForm = document.getElementById('resetPasswordForm');
        const newPasswordInput = document.getElementById('newPassword');
        const confirmPasswordInput = document.getElementById('confirmPassword');
        const errorMessageDiv = document.getElementById('errorMessage');
        const successMessageDiv = document.getElementById('successMessage');
        const loginLinkContainer = document.getElementById('loginLinkContainer');

        resetPasswordForm.addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent default form submission

            // Clear previous messages
            if (errorMessageDiv) errorMessageDiv.style.display = 'none';
            if (successMessageDiv) successMessageDiv.style.display = 'none';
            loginLinkContainer.classList.add('d-none');

            const formData = new FormData(resetPasswordForm);
            const data = {
                newPassword: formData.get('newPassword'),
                confirmPassword: formData.get('confirmPassword')
            };

            try {
                const response = await fetch(resetPasswordForm.action, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                if (response.ok) {
                    displayMessage(result.message || 'Password successfully reset!', 'success');
                    resetPasswordForm.reset();
                    resetPasswordForm.style.display = 'none'; // Hide the form
                    loginLinkContainer.classList.remove('d-none'); // Show login link
                } else {
                    displayMessage(result.message || 'An error occurred. Please try again.', 'danger');
                }
            } catch (error) {
                console.error('Error:', error);
                displayMessage('An unexpected error occurred. Please try again later.', 'danger');
            }
        });

        function displayMessage(message, type) {
            let messageDiv = type === 'success' ? successMessageDiv : errorMessageDiv;
            
            // If the predefined divs are not used or available, create one dynamically
            if (!messageDiv) {
                messageDiv = document.createElement('div');
                messageDiv.id = type === 'success' ? 'successMessage' : 'errorMessage';
                resetPasswordForm.parentNode.insertBefore(messageDiv, resetPasswordForm);
            }
            
            messageDiv.className = `alert alert-${type}`;
            messageDiv.textContent = message;
            messageDiv.style.textAlign = 'center';
            messageDiv.style.display = 'block';

            // If type is 'success' and message is NOT the default, auto-hide with animation
            if (type !== 'success' && message !== 'Password successfully reset!') {
                setTimeout(() => {
                    messageDiv.style.transition = 'opacity 0.5s';
                    messageDiv.style.opacity = '0';
                    setTimeout(() => {
                        messageDiv.style.display = 'none';
                        messageDiv.style.opacity = '';
                        messageDiv.style.transition = '';
                    }, 500);
                }, 2000); // Show for 2 seconds before fading out
            }
        }
    </script>
</body>
</html>