<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Post</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 24px;
            padding: 40px;
            width: 100%;
            max-width: 600px;
            box-shadow: 0 32px 64px rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            animation: slideUp 0.6s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .header {
            text-align: center;
            margin-bottom: 40px;
        }

        .header h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 8px;
        }

        .header p {
            color: #64748b;
            font-size: 1.1rem;
        }

        .form-group {
            margin-bottom: 32px;
            position: relative;
        }

        .form-group label {
            display: block;
            font-weight: 600;
            color: #374151;
            margin-bottom: 12px;
            font-size: 1.1rem;
            transition: color 0.3s ease;
        }

        .input-wrapper {
            position: relative;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 16px 20px;
            border: 2px solid #e5e7eb;
            border-radius: 16px;
            font-size: 1rem;
            font-family: inherit;
            background: #ffffff;
            transition: all 0.3s ease;
            resize: vertical;
        }

        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .form-group textarea {
            min-height: 150px;
            font-family: inherit;
            line-height: 1.6;
        }

        .char-counter {
            position: absolute;
            bottom: 12px;
            right: 16px;
            font-size: 0.875rem;
            color: #9ca3af;
            background: rgba(255, 255, 255, 0.9);
            padding: 4px 8px;
            border-radius: 8px;
            pointer-events: none;
        }

        .button-group {
            display: flex;
            gap: 16px;
            align-items: center;
            margin-top: 40px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 16px 32px;
            border-radius: 16px;
            font-size: 1.1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 8px 24px rgba(102, 126, 234, 0.3);
            position: relative;
            overflow: hidden;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
            transition: left 0.5s;
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 12px 32px rgba(102, 126, 234, 0.4);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .btn-primary:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .back-link {
            color: #667eea;
            text-decoration: none;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
            padding: 12px 20px;
            border-radius: 12px;
            background: rgba(102, 126, 234, 0.1);
        }

        .back-link:hover {
            background: rgba(102, 126, 234, 0.2);
            transform: translateX(-4px);
        }

        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .floating-circle {
            position: absolute;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.1);
            animation: float 6s ease-in-out infinite;
        }

        .floating-circle:nth-child(1) {
            width: 80px;
            height: 80px;
            top: 20%;
            left: 10%;
            animation-delay: 0s;
        }

        .floating-circle:nth-child(2) {
            width: 120px;
            height: 120px;
            top: 60%;
            right: 15%;
            animation-delay: 2s;
        }

        .floating-circle:nth-child(3) {
            width: 60px;
            height: 60px;
            bottom: 20%;
            left: 20%;
            animation-delay: 4s;
        }

        @keyframes float {

            0%,
            100% {
                transform: translateY(0px);
            }

            50% {
                transform: translateY(-20px);
            }
        }

        .status-indicator {
            position: absolute;
            top: -8px;
            right: -8px;
            width: 16px;
            height: 16px;
            background: #10b981;
            border-radius: 50%;
            border: 3px solid white;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% {
                transform: scale(1);
                opacity: 1;
            }

            50% {
                transform: scale(1.2);
                opacity: 0.7;
            }

            100% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .loading-spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid #ffffff;
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-left: 12px;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 24px;
            border-radius: 12px;
            color: white;
            font-weight: 500;
            z-index: 1000;
            transform: translateX(400px);
            transition: transform 0.3s ease-out;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.1);
        }

        .notification.show {
            transform: translateX(0);
        }

        .notification.success {
            background: linear-gradient(135deg, #10b981, #059669);
        }

        .notification.error {
            background: linear-gradient(135deg, #ef4444, #dc2626);
        }

        .error-message {
            color: #ef4444;
            font-size: 0.875rem;
            margin-top: 8px;
            display: none;
        }

        @media (max-width: 640px) {
            .container {
                padding: 24px;
                margin: 20px;
            }

            .header h1 {
                font-size: 2rem;
            }

            .button-group {
                flex-direction: column;
                align-items: stretch;
            }

            .btn-primary {
                width: 100%;
            }

            .notification {
                left: 20px;
                right: 20px;
                transform: translateY(-100px);
            }

            .notification.show {
                transform: translateY(0);
            }
        }
    </style>
</head>

<body>
    <div class="floating-elements">
        <div class="floating-circle"></div>
        <div class="floating-circle"></div>
        <div class="floating-circle"></div>
    </div>

    <div class="container">
        <div class="header">
            <h1>Edit Your Post</h1>
        </div>

        <form id="editForm">
            <div class="form-group">
                <label for="title">Post Title</label>
                <div class="input-wrapper">
                    <input type="text" id="title" name="title" value="<%= old_post.title %>" required maxlength="100">
                    <div class="status-indicator"></div>
                </div>
                <div class="error-message" id="titleError"></div>
            </div>

            <div class="form-group">
                <label for="cover_img">Post cover</label>
                <div class="input-wrapper">
                    <input type="file" id="cover_img" name="cover_img" accept="image/*">
                    <div class="status-indicator"></div>
                </div>
                <div class="error-message" id="coverImgError"></div>
                <% if (old_post.cover_img) { %>
                    <div style="margin-top:10px;">
                        <img src="<%= old_post.cover_img %>" alt="Current Cover"
                            style="max-width: 100%; border-radius: 8px;">
                        <div style="font-size:0.9em;color:#64748b;">Current cover image</div>
                    </div>
                    <% } %>
            </div>

            <div class="form-group">
                <label for="content">Content</label>
                <div class="input-wrapper">
                    <textarea id="content" name="content" required maxlength="5000"
                        placeholder="Share your thoughts..."><%= old_post.content %></textarea>
                    <div class="char-counter">
                        <span id="charCount">0</span> / 5000
                    </div>
                </div>
                <div class="error-message" id="contentError"></div>
            </div>

            <div class="button-group">
                <button type="submit" class="btn-primary">
                    <span class="btn-text">Update Post</span>
                    <div class="loading-spinner"></div>
                </button>
                <a href="/" class="back-link">
                    ← Back to Home
                </a>
            </div>
        </form>
    </div>

    <script>
        // Get post ID from URL
        const postId = '<%= old_post.id %>';

        // Character counter
        const textarea = document.getElementById('content');
        const charCount = document.getElementById('charCount');

        function updateCharCount() {
            const count = textarea.value.length;
            charCount.textContent = count;

            if (count > 4500) {
                charCount.style.color = '#ef4444';
            } else if (count > 4000) {
                charCount.style.color = '#f59e0b';
            } else {
                charCount.style.color = '#9ca3af';
            }
        }

        textarea.addEventListener('input', updateCharCount);
        updateCharCount(); // Initial count

        // Notification system
        function showNotification(message, type = 'success') {
            // Remove existing notifications
            const existingNotification = document.querySelector('.notification');
            if (existingNotification) {
                existingNotification.remove();
            }

            const notification = document.createElement('div');
            notification.className = `notification ${type}`;
            notification.textContent = message;
            document.body.appendChild(notification);

            // Show notification
            setTimeout(() => notification.classList.add('show'), 100);

            // Hide notification after 4 seconds
            setTimeout(() => {
                notification.classList.remove('show');
                setTimeout(() => notification.remove(), 300);
            }, 4000);
        }

        // Form validation
        function validateForm() {
            const title = document.getElementById('title').value.trim();
            const content = document.getElementById('content').value.trim();
            const titleError = document.getElementById('titleError');
            const contentError = document.getElementById('contentError');

            let isValid = true;

            // Reset errors
            titleError.style.display = 'none';
            contentError.style.display = 'none';

            if (!title) {
                titleError.textContent = 'Title is required';
                titleError.style.display = 'block';
                isValid = false;
            } else if (title.length > 100) {
                titleError.textContent = 'Title must be less than 100 characters';
                titleError.style.display = 'block';
                isValid = false;
            }

            if (!content) {
                contentError.textContent = 'Content is required';
                contentError.style.display = 'block';
                isValid = false;
            } else if (content.length > 5000) {
                contentError.textContent = 'Content must be less than 5000 characters';
                contentError.style.display = 'block';
                isValid = false;
            }

            return isValid;
        }

        // Form submission
        const form = document.getElementById('editForm');
        const submitBtn = form.querySelector('.btn-primary');
        const btnText = submitBtn.querySelector('.btn-text');
        const spinner = submitBtn.querySelector('.loading-spinner');

        form.addEventListener('submit', async function (e) {
            e.preventDefault();

            if (!validateForm()) {
                return;
            }

            // Show loading state
            submitBtn.disabled = true;
            btnText.textContent = 'Updating...';
            spinner.style.display = 'inline-block';

            try {
                const formData = new FormData(form);

                const response = await fetch(`/user/posts/${postId}/edit`, {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showNotification('✅ ' + result.message, 'success');

                    // Redirect after successful update (optional)
                    setTimeout(() => {
                        window.location.href = '/user/profile';
                    }, 2000);
                } else {
                    showNotification('❌ ' + result.message, 'error');
                }

            } catch (error) {
                console.error('Error updating post:', error);
                showNotification('❌ Failed to update post. Please try again.', 'error');
            } finally {
                // Reset button state
                submitBtn.disabled = false;
                btnText.textContent = 'Update Post';
                spinner.style.display = 'none';
            }
        });

        // Auto-resize textarea
        textarea.addEventListener('input', function () {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });

        // Initialize textarea height
        textarea.style.height = 'auto';
        textarea.style.height = (textarea.scrollHeight) + 'px';

        // Add interactive effects
        const inputs = document.querySelectorAll('input, textarea');
        inputs.forEach(input => {
            input.addEventListener('focus', function () {
                this.parentElement.classList.add('focused');
            });

            input.addEventListener('blur', function () {
                this.parentElement.classList.remove('focused');
            });
        });
    </script>
</body>

</html>