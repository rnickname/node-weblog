<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>
    <%= user.pageTitle || 'User Profile' %>
  </title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      background-color: #f0f2f5;
      /* Light gray background */
    }

    .profile-card {
      background-color: #fff;
      border-radius: 0.75rem;
      /* Rounded corners for the main card */
      box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
      margin-top: 2rem;
      padding: 2rem;
    }

    .profile-header {
      display: flex;
      align-items: flex-start;
      /* Align items to the top */
      margin-bottom: 2rem;
      flex-wrap: wrap;
      /* Allow wrapping on smaller screens */
    }

    .profile-avatar {
      width: 140px;
      height: 140px;
      border-radius: 0.75rem;
      /* Rounded corners for avatar */
      background-color: #e0e0e0;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 0.9rem;
      color: #555;
      flex-shrink: 0;
      /* Prevent shrinking */
      margin-right: 1.5rem;
      /* Space between avatar and text */
    }

    .profile-info {
      flex-grow: 1;
      /* Allow info to take remaining space */
      min-width: 200px;
      /* Minimum width for info block before wrapping */
    }

    .profile-name {
      font-size: 1.75rem;
      font-weight: 600;
      margin-bottom: 0.25rem;
    }

    .profile-username {
      color: #6c757d;
      margin-bottom: 0.5rem;
    }

    .profile-last-seen {
      font-size: 0.875rem;
      color: #6c757d;
      margin-bottom: 1rem;
    }

    .joined-date {
      font-size: 0.875rem;
      color: #6c757d;
      margin-left: auto;
      /* Push to the right */
      flex-shrink: 0;
      /* Prevent shrinking */
    }

    .nav-tabs .nav-link {
      border-top-left-radius: 0.75rem;
      border-top-right-radius: 0.75rem;
      border-bottom: 1px solid transparent;
      /* Prevent double border */
      color: #6c757d;
      padding: 0.75rem 1.25rem;
    }

    .nav-tabs .nav-link.active {
      color: #495057;
      background-color: #fff;
      border-color: #dee2e6 #dee2e6 #fff;
      font-weight: 500;
    }

    .form-label {
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    .form-control {
      border-radius: 0.5rem;
      /* Rounded corners for input fields */
      padding: 0.75rem 1rem;
    }

    .btn-primary {
      background-color: #0d6efd;
      /* Bootstrap primary blue */
      border-color: #0d6efd;
      border-radius: 0.5rem;
      /* Rounded corners for buttons */
      padding: 0.75rem 1.5rem;
      font-weight: 500;
    }

    .btn-primary:hover {
      background-color: #0b5ed7;
      border-color: #0a58ca;
    }

    .btn-outline-primary {
      border-radius: 0.5rem;
      padding: 0.5rem 1rem;
    }

    /* Responsive adjustments */
    @media (max-width: 767.98px) {
      .profile-header {
        flex-direction: column;
        align-items: center;
        text-align: center;
      }

      .profile-avatar {
        margin-right: 0;
        margin-bottom: 1rem;
      }

      .joined-date {
        margin-left: 0;
        margin-top: 0.5rem;
      }
    }
  </style>
</head>

<body>
  <%- include('nav') %>
    <div class="container py-5">
      <div class="profile-card">
        <div class="profile-header">
          <div class="profile-avatar">
            <% if (user.avatarUrl) { %>
              <img src="<%= user.avatarUrl %>" alt="User Avatar" class="img-fluid rounded-3">
              <% } else { %>
                140x140
                <% } %>
          </div>
          <div class="profile-info">
            <div class="d-flex justify-content-between align-items-center flex-wrap">
              <h1 class="profile-name mb-0">
                <%= user.name || 'User Name' %>
              </h1>
              <span class="joined-date">Joined <%= user.createdAt ? new Date(user.createdAt).toLocaleString('en-US', {
                  year: 'numeric' , month: 'long' , day: 'numeric' , hour: 'numeric' , minute: 'numeric' })
                  : 'not defined' %></span>
            </div>
            <p class="profile-username">@<%= user.username || 'username' %>
            </p>
            <p class="profile-last-seen">Last seen <%= user.lastSeen || 'N/A' %>
            </p>
            <!-- <button class="btn btn-outline-primary rounded-pill">Change Photo</button> -->
            <form id="uploadForm" enctype="multipart/form-data" class="mb-3">
              <input type="file" id="profilePicInput" name="profile_pic" accept="image/*" class="d-none">
              <button type="button" class="btn btn-outline-primary rounded-pill"
                onclick="document.getElementById('profilePicInput').click()">
                Change Photo
              </button>
            </form>
          </div>
        </div>

        <ul class="nav nav-tabs mb-4" id="myTab" role="tablist">
          <li class="nav-item" role="presentation">
            <button class="nav-link active" id="settings-tab" data-bs-toggle="tab" data-bs-target="#settings"
              type="button" role="tab" aria-controls="settings" aria-selected="true">Settings</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="password-tab" data-bs-toggle="tab" data-bs-target="#password" type="button"
              role="tab" aria-controls="password" aria-selected="false">Change Password</button>
          </li>
          <li class="nav-item" role="presentation">
            <button class="nav-link" id="logout-tab" data-bs-toggle="tab" data-bs-target="#logout" type="button"
              role="tab" aria-controls="logout" aria-selected="false">Logout</button>
          </li>
        </ul>

        <div class="tab-content" id="myTabContent">
          <div class="tab-pane fade show active" id="settings" role="tabpanel" aria-labelledby="settings-tab">
            <form action="/user/profile" method="post">
              <div class="row mb-3">
                <div class="col-md-6 mb-3">
                  <label for="firstName" class="form-label">First Name</label>
                  <input type="text" class="form-control" id="firstName" name="firstName"
                    value="<%= user.firstName || '' %>">
                </div>
                <div class="col-md-6 mb-3">
                  <label for="lastName" class="form-label">Last Name</label>
                  <input type="text" class="form-control" id="lastName" name="lastName"
                    value="<%= user.lastName || '' %>">
                </div>
                <div class="col-md-6">
                  <label for="username" class="form-label">Username</label>
                  <input type="text" class="form-control" id="username" value="<%= user.username || '' %>" disabled>
                </div>
                <div class="col-md-6">
                  <label for="email" class="form-label">Email</label>
                  <input type="email" class="form-control" id="email" value="<%= user.email || '' %>" disabled>
                </div>
              </div>
              <div class="mb-4">
                <label for="about" class="form-label">About</label>
                <textarea class="form-control" id="about" name="bio" rows="4"><%= user.bio || 'My Bio' %></textarea>
              </div>
              <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-primary">Save Changes</button>
              </div>
            </form>
          </div>
          <div class="tab-pane fade" id="password" role="tabpanel" aria-labelledby="password-tab">
            <div id="passwordMessageAlert" class="alert" style="display: none;" role="alert"></div>
            <form id="passwordForm">
              <div class="mb-3">
                <label for="currentPassword" class="form-label">Current Password</label>
                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
              </div>
              <div class="mb-3">
                <label for="newPassword" class="form-label">New Password</label>
                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
              </div>
              <div class="mb-4">
                <label for="confirmNewPassword" class="form-label">Confirm New Password</label>
                <input type="password" class="form-control" id="confirmNewPassword" name="confirmNewPassword" required>
              </div>
              <div class="d-flex justify-content-end">
                <button type="submit" class="btn btn-primary">Save Changes</button>
              </div>
            </form>
          </div>
          <div class="tab-pane fade" id="logout" role="tabpanel" aria-labelledby="logout-tab">
            <div class="text-center mt-4">
              <h4>Logout</h4>
              <p class="mb-4">Are you sure you want to logout?</p>
              <form action="/user/logout" method="get">
                <button type="submit" class="btn btn-danger btn-lg px-5">Logout</button>
              </form>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      document.getElementById('profilePicInput').addEventListener('change', async function (e) {
        const file = e.target.files[0];
        if (!file) return;

        // Validate file type and size
        if (!file.type.startsWith('image/')) {
          alert('Please upload an image file');
          return;
        }
        if (file.size > 5 * 1024 * 1024) { // 5MB limit
          alert('File size must be less than 5MB');
          return;
        }

        const formData = new FormData();
        formData.append('profile_pic', file);

        try {
          const response = await fetch('/user/profile', {
            method: 'POST',
            body: formData
          });

          if (!response.ok) {
            throw new Error('Upload failed');
          }

          const result = await response.json();
          if (result.success) {
            // Refresh the page to show new image
            window.location.reload();
          }
        } catch (error) {
          console.error('Error uploading file:', error);
          alert('Failed to upload image. Please try again.');
        }
      });
    </script>
    <script>
      document.getElementById('passwordForm').addEventListener('submit', async function (e) {
        e.preventDefault();

        const formData = {
          currentPassword: document.getElementById('currentPassword').value,
          newPassword: document.getElementById('newPassword').value,
          confirmNewPassword: document.getElementById('confirmNewPassword').value
        };

        try {
          const response = await fetch('/user/profile/updatePassword', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
          });

          const result = await response.json();
          const alertElement = document.getElementById('passwordMessageAlert');

          if (response.ok) {
            alertElement.className = 'alert alert-success';
            alertElement.textContent = result.message;
            // Reset form on success
            this.reset();
          } else {
            alertElement.className = 'alert alert-danger';
            alertElement.textContent = result.message;
          }

          alertElement.style.display = 'block';

          // Hide the alert after 5 seconds
          setTimeout(() => {
            alertElement.style.display = 'none';
          }, 5000);

        } catch (error) {
          console.error('Error:', error);
          const alertElement = document.getElementById('passwordMessageAlert');
          alertElement.className = 'alert alert-danger';
          alertElement.textContent = 'An error occurred. Please try again.';
          alertElement.style.display = 'block';
        }
      });
    </script>
</body>

</html>